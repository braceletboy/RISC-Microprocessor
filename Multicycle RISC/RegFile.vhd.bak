library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

library std;
use std.standard.all;

entity RegFile is
	port(a1,a2,a3: in std_logic_vector(2 downto 0); 
				d3: in std_logic_vector(15 downto 0); 
				d1,d2: out std_logic_vector(15 downto 0);
				CLK, regWrite: in std_logic);
end entity;

architecture reg_file_arch of RegFile is
	type reg_array is array(7 downto 0) of std_logic_vector(15 downto 0);
begin
	process(a1,a2,a3,d3,regWrite,CLK)
		variable regFile: reg_array;
		variable addr1,addr2,addr3: integer;
	begin
		addr1 := to_integer(unsigned(a1));
		addr2 := to_integer(unsigned(a2));
		addr3 := to_integer(unsigned(a3));
		if (CLK'event and (CLK = '1') and (regWrite = '1')) then
			regFile(addr3) := d3;
		end if;
		d1 <= regFile(addr1);
		d2 <= regFile(addr2);
	end process;
end reg_file_arch;