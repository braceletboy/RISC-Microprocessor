library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

library std;
use std.standard.all;

entity Memory is 
	port(addr, data_in: in std_logic_vector(15 downto 0); 
			data_out: out std_logic_vector(15 downto 0); 
			CLK, memRead, memWrite: in std_logic);
end entity;

architecture memory_arch of Memory is
	type mem_array is array(65535 downto 1) of std_logic_vector(15 downto 0);

begin
	process(addr, data_in, memRead, memWrite,CLK)
		variable addr_var: integer;
		variable mem: mem_array;
		variable data_outVar: std_logic_vector(15 downto 0);
	begin
		addr_var := to_integer(unsigned(addr));
		if (CLK'event and (CLK = '1') and ((memRead and not memWrite) = '1')) then
			data_outVar := mem(addr_var);
		elsif (CLK'event and (CLK = '1') and ((not memRead and memWrite) = '1')) then
			mem(addr_var) := data_in;
		end if;
		data_out <= data_outVar;
	end process;
end memory_arch;